version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: hotelapp
      POSTGRES_PASSWORD: password
      POSTGRES_DB: hoteldb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - hotel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hotelapp -d hoteldb || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_HEAP_OPTS: "-Xms128M -Xmx128M"
    networks:
      - hotel-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xms512M -Xmx512M"
    networks:
      - hotel-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  hotel-service:
    container_name: hotel-service
    image: hotel-service:latest
    build:
      context: ../hotel-service
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hoteldb
      SPRING_DATASOURCE_USERNAME: hotelapp
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_PROFILES_ACTIVE: docker
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    ports:
      - "8081:8080"
      - "5005:5005"
    networks:
      - hotel-network

  reservation-service:
    container_name: reservation-service
    image: reservation-service:latest
    build:
      context: ../reservation-service
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hoteldb
      SPRING_DATASOURCE_USERNAME: hotelapp
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_PROFILES_ACTIVE: docker
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006"
    ports:
      - "8082:8080"
      - "5006:5006"
    networks:
      - hotel-network

  notification-service:
    container_name: notification-service
    image: notification-service:latest
    build:
      context: ../notification-service
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_PROFILES_ACTIVE: docker
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007"
    ports:
      - "8083:8080"
      - "5007:5007"
    networks:
      - hotel-network

  api-gateway:
    container_name: api-gateway
    image: api-gateway:latest
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    environment:
      SERVICE_URL_HOTEL: http://hotel-service:8081
      SERVICE_URL_RESERVATION: http://reservation-service:8082
      SERVICE_URL_NOTIFICATION: http://notification-service:8083
      SERVICE_URL_AUTH: http://auth-service:8084
      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET: ${JWT_SECRET:-ZhV3+eY767wZQ4ce+qb8PbwanES3wA8XpBvAkC2ZiVA=}
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008"
    ports:
      - "8080:8080"
      - "5008:5008"
    depends_on:
      - hotel-service
      - reservation-service
      - notification-service
      - auth-service
    networks:
      - hotel-network

  auth-service:
    container_name: auth-service
    image: auth-service:latest
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hoteldb
      SPRING_DATASOURCE_USERNAME: hotelapp
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET: ${JWT_SECRET:-ZhV3+eY767wZQ4ce+qb8PbwanES3wA8XpBvAkC2ZiVA=}
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5009"
    ports:
      - "8084:8080"
      - "5009:5009"
    networks:
      - hotel-network

networks:
  hotel-network:
    name: hotel-network
    driver: bridge

volumes:
  postgres-data:
